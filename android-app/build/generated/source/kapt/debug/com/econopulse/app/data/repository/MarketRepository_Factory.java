// Generated by Dagger (https://dagger.dev).
package com.econopulse.app.data.repository;

import com.econopulse.app.network.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MarketRepository_Factory implements Factory<MarketRepository> {
  private final Provider<ApiService> apiProvider;

  public MarketRepository_Factory(Provider<ApiService> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public MarketRepository get() {
    return newInstance(apiProvider.get());
  }

  public static MarketRepository_Factory create(Provider<ApiService> apiProvider) {
    return new MarketRepository_Factory(apiProvider);
  }

  public static MarketRepository newInstance(ApiService api) {
    return new MarketRepository(api);
  }
}
