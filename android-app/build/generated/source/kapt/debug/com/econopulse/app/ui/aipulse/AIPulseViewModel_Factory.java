// Generated by Dagger (https://dagger.dev).
package com.econopulse.app.ui.aipulse;

import com.econopulse.app.data.repository.MarketRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AIPulseViewModel_Factory implements Factory<AIPulseViewModel> {
  private final Provider<MarketRepository> marketRepositoryProvider;

  public AIPulseViewModel_Factory(Provider<MarketRepository> marketRepositoryProvider) {
    this.marketRepositoryProvider = marketRepositoryProvider;
  }

  @Override
  public AIPulseViewModel get() {
    return newInstance(marketRepositoryProvider.get());
  }

  public static AIPulseViewModel_Factory create(
      Provider<MarketRepository> marketRepositoryProvider) {
    return new AIPulseViewModel_Factory(marketRepositoryProvider);
  }

  public static AIPulseViewModel newInstance(MarketRepository marketRepository) {
    return new AIPulseViewModel(marketRepository);
  }
}
