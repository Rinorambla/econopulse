// Generated by Dagger (https://dagger.dev).
package com.econopulse.app.ui.dashboard;

import com.econopulse.app.data.repository.MarketRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DashboardViewModel_Factory implements Factory<DashboardViewModel> {
  private final Provider<MarketRepository> marketRepositoryProvider;

  public DashboardViewModel_Factory(Provider<MarketRepository> marketRepositoryProvider) {
    this.marketRepositoryProvider = marketRepositoryProvider;
  }

  @Override
  public DashboardViewModel get() {
    return newInstance(marketRepositoryProvider.get());
  }

  public static DashboardViewModel_Factory create(
      Provider<MarketRepository> marketRepositoryProvider) {
    return new DashboardViewModel_Factory(marketRepositoryProvider);
  }

  public static DashboardViewModel newInstance(MarketRepository marketRepository) {
    return new DashboardViewModel(marketRepository);
  }
}
