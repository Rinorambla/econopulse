// Generated by Dagger (https://dagger.dev).
package com.econopulse.app.ui.econoai;

import com.econopulse.app.data.repository.MarketRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class EconoAIViewModel_Factory implements Factory<EconoAIViewModel> {
  private final Provider<MarketRepository> marketRepositoryProvider;

  public EconoAIViewModel_Factory(Provider<MarketRepository> marketRepositoryProvider) {
    this.marketRepositoryProvider = marketRepositoryProvider;
  }

  @Override
  public EconoAIViewModel get() {
    return newInstance(marketRepositoryProvider.get());
  }

  public static EconoAIViewModel_Factory create(
      Provider<MarketRepository> marketRepositoryProvider) {
    return new EconoAIViewModel_Factory(marketRepositoryProvider);
  }

  public static EconoAIViewModel newInstance(MarketRepository marketRepository) {
    return new EconoAIViewModel(marketRepository);
  }
}
