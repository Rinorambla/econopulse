// Generated by Dagger (https://dagger.dev).
package com.econopulse.app.ui.marketdna;

import com.econopulse.app.data.repository.MarketRepository;
import com.econopulse.app.network.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MarketDNAViewModel_Factory implements Factory<MarketDNAViewModel> {
  private final Provider<MarketRepository> marketRepositoryProvider;

  private final Provider<ApiService> apiProvider;

  public MarketDNAViewModel_Factory(Provider<MarketRepository> marketRepositoryProvider,
      Provider<ApiService> apiProvider) {
    this.marketRepositoryProvider = marketRepositoryProvider;
    this.apiProvider = apiProvider;
  }

  @Override
  public MarketDNAViewModel get() {
    return newInstance(marketRepositoryProvider.get(), apiProvider.get());
  }

  public static MarketDNAViewModel_Factory create(
      Provider<MarketRepository> marketRepositoryProvider, Provider<ApiService> apiProvider) {
    return new MarketDNAViewModel_Factory(marketRepositoryProvider, apiProvider);
  }

  public static MarketDNAViewModel newInstance(MarketRepository marketRepository, ApiService api) {
    return new MarketDNAViewModel(marketRepository, api);
  }
}
